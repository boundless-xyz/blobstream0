{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "contract IRiscZeroVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_trustedHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_trustedHeight",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_imageId",
          "type": "bytes32"
        }
      ],
      "name": "adminSetImageId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_trustedHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_trustedHeight",
          "type": "uint64"
        }
      ],
      "name": "adminSetTrustedState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRiscZeroVerifier",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "adminSetVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "imageId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestHeight",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proofNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "trustedHeaderHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "newHeight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "newHeaderHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct RangeCommitment",
          "name": "_commit",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_seal",
          "type": "bytes"
        }
      ],
      "name": "updateRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IRiscZeroVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proofNonce",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "height",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "dataRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct DataRootTuple",
          "name": "_tuple",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32[]",
              "name": "sideNodes",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "key",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numLeaves",
              "type": "uint256"
            }
          ],
          "internalType": "struct BinaryMerkleProof",
          "name": "_proof",
          "type": "tuple"
        }
      ],
      "name": "verifyAttestation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proofNonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "startBlock",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "endBlock",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataCommitment",
          "type": "bytes32"
        }
      ],
      "name": "DataCommitmentStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "blockNumber",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "headerHash",
          "type": "bytes32"
        }
      ],
      "name": "HeadUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "InvalidTargetHeight",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTrustedHeaderHash",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    }
  ],
  "bytecode": {
    "linkReferences": {},
    "object": "",
    "sourceMap": "1137:5052:13:-:0;;;788:66:14;2686:54:13;;3394:271;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3512:6;-1:-1:-1;;;;;1273:26:8;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:8;;1350:1;1322:31;;;947:51:16;920:18;;1322:31:8;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3534:8:13::1;:20:::0;;-1:-1:-1;;;;;;3534:20:13::1;-1:-1:-1::0;;;;;3534:20:13;;;::::1;::::0;;;::::1;::::0;;;3564:15:::1;:30:::0;3604:12:::1;:29:::0;;-1:-1:-1;;;;;;3604:29:13::1;-1:-1:-1::0;;;;;3604:29:13;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3644:10:13::1;:14:::0;1137:5052;;1886:153:9;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:9;;;1998:34;2023:8;1998:24;:34::i;:::-;1886:153;:::o;2912:187:8:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:8;;;-1:-1:-1;;;;;;3020:17:8;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:16:-;-1:-1:-1;;;;;89:31:16;;79:42;;69:70;;135:1;132;125:12;150:646;272:6;280;288;296;349:3;337:9;328:7;324:23;320:33;317:53;;;366:1;363;356:12;317:53;398:9;392:16;417:31;442:5;417:31;:::i;:::-;517:2;502:18;;496:25;467:5;;-1:-1:-1;530:33:16;496:25;530:33;:::i;:::-;629:2;614:18;;608:25;678:2;663:18;;657:25;582:7;;-1:-1:-1;608:25:16;-1:-1:-1;;;;;;713:32:16;;701:45;;691:73;;760:1;757;750:12;691:73;150:646;;;;-1:-1:-1;150:646:16;;-1:-1:-1;;150:646:16:o;801:203::-;1137:5052:13;;;;;;"
  },
  "deployedBytecode": {
    "linkReferences": {},
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063e405bbc311610066578063e405bbc3146101da578063e6679c2614610205578063ef3f7dd514610218578063f2fde38b1461022157600080fd5b80638da5cb5b1461019c578063a7e47629146101ad578063ce0bb7e4146101c0578063e30c3978146101c957600080fd5b80636c4f6ba9116100d35780636c4f6ba914610162578063715018a61461017957806379ba5097146101815780638a9fbdec1461018957600080fd5b80631f3302a9146100fa57806323a4608b146101225780632b7ac3f314610137575b600080fd5b61010d610108366004610d8f565b610234565b60405190151581526020015b60405180910390f35b610135610130366004610ecc565b6102a1565b005b60025461014a906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61016b60065481565b604051908152602001610119565b6101356102d1565b6101356102e5565b610135610197366004610ef8565b61032e565b6000546001600160a01b031661014a565b6101356101bb366004610fb4565b610573565b61016b60045481565b6001546001600160a01b031661014a565b6005546101ed906001600160401b031681565b6040516001600160401b039091168152602001610119565b610135610213366004610fe2565b610580565b61016b60035481565b61013561022f366004610fe2565b6105aa565b600083158061024557506004548410155b156102525750600061029a565b6000848152600760209081526040808320548151875181850152928701518383015281518084038301815260609093019091529190610294908390869061061b565b50925050505b9392505050565b6102a961071c565b6006919091556005805467ffffffffffffffff19166001600160401b03909216919091179055565b6102d961071c565b6102e36000610749565b565b60015433906001600160a01b031681146103225760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61032b81610749565b50565b60055460208401516001600160401b039182169116116103615760405163145ce5ff60e11b815260040160405180910390fd5b600654835114610384576040516352c6046360e01b815260040160405180910390fd5b6040805184516020808301919091528501516001600160401b03168183015290840151606080830191909152840151608082015260009060a00160408051601f1981840301815290829052600280546003549294506001600160a01b03169263ab750e7592879287926103f890889061102f565b602060405180830381855afa158015610415573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610438919061103b565b6040518563ffffffff1660e01b81526004016104579493929190611054565b60006040518083038186803b15801561046f57600080fd5b505afa158015610483573d6000803e3d6000fd5b50505060608501516020808701516005546004546040519081529394506001600160401b03918216939116917f34dd3689f5bd77a60a3ff2e09483dcab032fa2f1fd7227af3e24bed21beab1cb910160405180910390a46020848101516005805467ffffffffffffffff19166001600160401b03909216918217905560408087015160068190558151928352928201929092527f292f5abc3167175400fca463fa99530cda826ec53ec5eb1f3a2776006dacd75d910160405180910390a1606084015160048054600090815260076020526040812092909255805491610568836110aa565b919050555050505050565b61057b61071c565b600355565b61058861071c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105b261071c565b600180546001600160a01b0383166001600160a01b031990911681179091556105e36000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000806001846040015111610643578351511561063e5750600090506001610714565b610669565b61065584602001518560400151610762565b845151146106695750600090506001610714565b83604001518460200151106106845750600090506002610714565b600061068f846107fa565b8551519091506000036106c25784604001516001036106b5578514915060009050610714565b6000809250925050610714565b6000806106dd87602001518860400151858a6000015161086f565b909250905060008160058111156106f6576106f66110c3565b1461070957600094509250610714915050565b508614925060009150505b935093915050565b6000546001600160a01b031633146102e35760405163118cdaa760e01b8152336004820152602401610319565b600180546001600160a01b031916905561032b816109f9565b600060018211610774575060006107f4565b61077d82610a49565b610789906101006110d9565b905060006107986001836110d9565b6001901b90506001816107ab91906110d9565b84116107b757506107f4565b806001036107c95760019150506107f4565b6107e56107d682866110d9565b6107e083866110d9565b610762565b6107f09060016110ec565b9150505b92915050565b60006002600060f81b836040516020016108159291906110ff565b60408051601f198184030181529082905261082f9161102f565b602060405180830381855afa15801561084c573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107f4919061103b565b60008084600003610885575082905060036109f0565b846001036108aa5782511561089f575082905060046109f0565b5082905060006109f0565b82516000036108be575082905060056109f0565b60006108c986610a76565b905060006108e6856000600188516108e191906110d9565b610ab7565b905060008289101561096a5760006109008a858a8661086f565b925090506000826005811115610918576109186110c3565b1461092b575086945092506109f0915050565b61095b818860018a5161093e91906110d9565b8151811061094e5761094e611123565b6020026020010151610c3c565b600095509550505050506109f0565b600061098a610979858c6110d9565b610983868c6110d9565b8a8661086f565b9250905060008260058111156109a2576109a26110c3565b146109b5575086945092506109f0915050565b6109e587600189516109c791906110d9565b815181106109d7576109d7611123565b602002602001015182610c3c565b600095509550505050505b94509492505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b81816001901b1015610a6a57610a636001826110ec565b9050610a4c565b6107f4816101006110d9565b60006001821015610a8657600080fd5b6000610a9183610cba565b90506000610aa06001836110d9565b6001901b905083810361029a5760011c9392505050565b606081831115610b1c5760405162461bcd60e51b815260206004820152602a60248201527f496e76616c69642072616e67653a205f626567696e2069732067726561746572604482015269081d1a185b8817d95b9960b21b6064820152608401610319565b8351831180610b2b5750835182115b15610b905760405162461bcd60e51b815260206004820152602f60248201527f496e76616c69642072616e67653a205f626567696e206f72205f656e6420617260448201526e65206f7574206f6620626f756e647360881b6064820152608401610319565b6000610b9c84846110d9565b6001600160401b03811115610bb357610bb3610cdd565b604051908082528060200260200182016040528015610bdc578160200160208202803683370190505b509050835b83811015610c3357858181518110610bfb57610bfb611123565b6020026020010151828683610c1091906110d9565b81518110610c2057610c20611123565b6020908102919091010152600101610be1565b50949350505050565b604051600160f81b6020820152602181018390526041810182905260009060029060610160408051601f1981840301815290829052610c7a9161102f565b602060405180830381855afa158015610c97573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061029a919061103b565b6000805b82156107f45780610cce816110aa565b915050600183901c9250610cbe565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610d1557610d15610cdd565b60405290565b604051606081016001600160401b0381118282101715610d1557610d15610cdd565b604051608081016001600160401b0381118282101715610d1557610d15610cdd565b604051601f8201601f191681016001600160401b0381118282101715610d8757610d87610cdd565b604052919050565b60008060008385036080811215610da557600080fd5b8435935060206040601f1983011215610dbd57600080fd5b610dc5610cf3565b8682013581526040870135828201529350606086013591506001600160401b0380831115610df257600080fd5b9186019160608389031215610e0657600080fd5b610e0e610d1b565b833582811115610e1d57600080fd5b8401601f81018a13610e2e57600080fd5b803583811115610e4057610e40610cdd565b8060051b9350610e51858501610d5f565b818152938201850193858101908c861115610e6b57600080fd5b928601925b85841015610e8957833582529286019290860190610e70565b80855250505050828401358382015260408401356040820152809450505050509250925092565b80356001600160401b0381168114610ec757600080fd5b919050565b60008060408385031215610edf57600080fd5b82359150610eef60208401610eb0565b90509250929050565b600080600083850360a0811215610f0e57600080fd5b6080811215610f1c57600080fd5b50610f25610d3d565b84358152610f3560208601610eb0565b602082015260408501356040820152606085013560608201528093505060808401356001600160401b0380821115610f6c57600080fd5b818601915086601f830112610f8057600080fd5b813581811115610f8f57600080fd5b876020828501011115610fa157600080fd5b6020830194508093505050509250925092565b600060208284031215610fc657600080fd5b5035919050565b6001600160a01b038116811461032b57600080fd5b600060208284031215610ff457600080fd5b813561029a81610fcd565b6000815160005b818110156110205760208185018101518683015201611006565b50600093019283525090919050565b600061029a8284610fff565b60006020828403121561104d57600080fd5b5051919050565b606081528360608201528385608083013760006080858301015260006080601f19601f870116830101905083602083015282604083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016110bc576110bc611094565b5060010190565b634e487b7160e01b600052602160045260246000fd5b818103818111156107f4576107f4611094565b808201808211156107f4576107f4611094565b6001600160f81b031983168152600061111b6001830184610fff565b949350505050565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206bebdbc10c6742ffe6de1d2f297756ed90548d04138f9db61eb93095d8ce9e2f64736f6c63430008170033",
    "sourceMap": "1137:5052:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5745:442;;;;;;:::i;:::-;;:::i;:::-;;;3088:14:16;;3081:22;3063:41;;3051:2;3036:18;5745:442:13;;;;;;;;3770:180;;;;;;:::i;:::-;;:::i;:::-;;2252:33;;;;;-1:-1:-1;;;;;2252:33:13;;;;;;-1:-1:-1;;;;;3738:32:16;;;3720:51;;3708:2;3693:18;2252:33:13;3548:229:16;3140:30:13;;;;;;;;;3928:25:16;;;3916:2;3901:18;3140:30:13;3782:177:16;2293:101:8;;;:::i;2119:229:9:-;;;:::i;4418:923:13:-;;;;;;:::i;:::-;;:::i;1638:85:8:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:8;1638:85;;4046:97:13;;;;;;:::i;:::-;;:::i;2747:25::-;;;;;;1232:99:9;1311:13;;-1:-1:-1;;;;;1311:13:9;1232:99;;2900:26:13;;;;;-1:-1:-1;;;;;2900:26:13;;;;;;-1:-1:-1;;;;;5737:31:16;;;5719:50;;5707:2;5692:18;2900:26:13;5575:200:16;4231:111:13;;;;;;:::i;:::-;;:::i;2686:54::-;;;;;;1524:178:9;;;;;;:::i;:::-;;:::i;5745:442:13:-;5902:4;5926:16;;;:45;;;5961:10;;5946:11;:25;;5926:45;5922:88;;;-1:-1:-1;5994:5:13;5987:12;;5922:88;6020:12;6035:24;;;:11;:24;;;;;;;;;6131:18;;6723:13:16;;6131:18:13;;;6705:32:16;6781:17;;;6775:24;6753:20;;;6746:54;6131:18:13;;;;;;;;;6678::16;;;;6131::13;;;6035:24;6020:12;6093:57;;6035:24;;6123:6;;6093:23;:57::i;:::-;-1:-1:-1;6070:80:13;-1:-1:-1;;;5745:442:13;;;;;;:::o;3770:180::-;1531:13:8;:11;:13::i;:::-;3874:15:13::1;:30:::0;;;;3914:12:::1;:29:::0;;-1:-1:-1;;3914:29:13::1;-1:-1:-1::0;;;;;3914:29:13;;::::1;::::0;;;::::1;::::0;;3770:180::o;2293:101:8:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2119:229:9:-;1311:13;;735:10:10;;-1:-1:-1;;;;;1311:13:9;2214:24;;2210:96;;2261:34;;-1:-1:-1;;;2261:34:9;;-1:-1:-1;;;;;3738:32:16;;2261:34:9;;;3720:51:16;3693:18;;2261:34:9;;;;;;;;2210:96;2315:26;2334:6;2315:18;:26::i;:::-;2161:187;2119:229::o;4418:923:13:-;4537:12;;4516:17;;;;-1:-1:-1;;;;;4537:12:13;;;4516:33;;;4512:92;;4572:21;;-1:-1:-1;;;4572:21:13;;;;;;;;;;;4512:92;4646:15;;4617:25;;:44;4613:108;;4684:26;;-1:-1:-1;;;4684:26:13;;;;;;;;;;;4613:108;4754:19;;;7042:13:16;;4754:19:13;;;;7024:32:16;;;;7104:17;;7098:24;-1:-1:-1;;;;;7094:49:16;7072:20;;;7065:79;7188:17;;;7182:24;7160:20;;;;7153:54;;;;7251:17;;7245:24;7223:20;;;7216:54;4731:20:13;;6996:19:16;;4754::13;;;-1:-1:-1;;4754:19:13;;;;;;;;;;4783:8;;;4806:7;;4754:19;;-1:-1:-1;;;;;;4783:8:13;;:15;;4799:5;;;;4815:15;;4754:19;;4815:15;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4783:48;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4913:18:13;;;;4894:17;;;;;4880:12;;4868:10;;4847:85;;3928:25:16;;;4913:18:13;;-1:-1:-1;;;;;;4847:85:13;;;;4880:12;;;4847:85;;3901:18:16;4847:85:13;;;;;;;4998:17;;;;;4983:12;:32;;-1:-1:-1;;4983:32:13;-1:-1:-1;;;;;4983:32:13;;;;;;;;5043:21;;;;;5025:15;:39;;;5079:41;;8703:50:16;;;8769:18;;;8762:34;;;;5079:41:13;;8676:18:16;5079:41:13;;;;;;;5294:18;;;;5280:10;;;5268:23;;;;:11;:23;;;;;:44;;;;5322:12;;;;;;:::i;:::-;;;;;;4502:839;4418:923;;;:::o;4046:97::-;1531:13:8;:11;:13::i;:::-;4118:7:13::1;:18:::0;4046:97::o;4231:111::-;1531:13:8;:11;:13::i;:::-;4315:8:13::1;:20:::0;;-1:-1:-1;;;;;;4315:20:13::1;-1:-1:-1::0;;;;;4315:20:13;;;::::1;::::0;;;::::1;::::0;;4231:111::o;1524:178:9:-;1531:13:8;:11;:13::i;:::-;1613::9::1;:24:::0;;-1:-1:-1;;;;;1613:24:9;::::1;-1:-1:-1::0;;;;;;1613:24:9;;::::1;::::0;::::1;::::0;;;1677:7:::1;1684::8::0;1710:6;-1:-1:-1;;;;;1710:6:8;;1638:85;1677:7:9::1;-1:-1:-1::0;;;;;1652:43:9::1;;;;;;;;;;;1524:178:::0;:::o;1342:1444:6:-;1470:4;1476:10;1592:1;1573:5;:15;;;:20;1569:326;;1613:15;;:22;:27;1609:117;;-1:-1:-1;1668:5:6;;-1:-1:-1;1675:35:6;1660:51;;1609:117;1569:326;;;1772:45;1790:5;:9;;;1801:5;:15;;;1772:17;:45::i;:::-;1746:15;;:22;:71;1742:153;;-1:-1:-1;1841:5:6;;-1:-1:-1;1848:35:6;1833:51;;1742:153;1954:5;:15;;;1941:5;:9;;;:28;1937:98;;-1:-1:-1;1993:5:6;;-1:-1:-1;2000:23:6;1985:39;;1937:98;2131:14;2148:16;2159:4;2148:10;:16::i;:::-;2281:15;;:22;2131:33;;-1:-1:-1;2281:15:6;:27;2277:232;;2328:5;:15;;;2347:1;2328:20;2324:175;;2376:14;;;-1:-1:-1;2392:18:6;;-1:-1:-1;2368:43:6;;2324:175;2458:5;2465:18;2450:34;;;;;;;2324:175;2520:20;2542:16;2562:68;2578:5;:9;;;2589:5;:15;;;2606:6;2614:5;:15;;;2562;:68::i;:::-;2519:111;;-1:-1:-1;2519:111:6;-1:-1:-1;2654:18:6;2645:5;:27;;;;;;;;:::i;:::-;;2641:79;;2696:5;;-1:-1:-1;2703:5:6;-1:-1:-1;2688:21:6;;-1:-1:-1;;2688:21:6;2641:79;-1:-1:-1;2738:20:6;;;-1:-1:-1;2760:18:6;;-1:-1:-1;;1342:1444:6;;;;;;;:::o;1796:162:8:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:8;735:10:10;1855:23:8;1851:101;;1901:40;;-1:-1:-1;;;1901:40:8;;735:10:10;1901:40:8;;;3720:51:16;3693:18;;1901:40:8;3548:229:16;1886:153:9;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:9;;;1998:34;2023:8;1998:24;:34::i;936:1011:4:-;1009:18;1052:1;1039:9;:14;1035:125;;-1:-1:-1;1152:1:4;1145:8;;1035:125;1304:25;1319:9;1304:14;:25::i;:::-;1281:48;;245:3:2;1281:48:4;:::i;:::-;1268:61;-1:-1:-1;1394:28:4;1432:14;1445:1;1268:61;1432:14;:::i;:::-;1426:1;:21;;1394:54;;1567:1;1544:20;:24;;;;:::i;:::-;1537:3;:31;1533:412;;1580:17;;;1533:412;1711:20;1735:1;1711:25;1707:238;;1755:1;1748:8;;;;;1707:238;1859:79;1877:26;1883:20;1877:3;:26;:::i;:::-;1905:32;1917:20;1905:9;:32;:::i;:::-;1859:17;:79::i;:::-;1855:83;;:1;:83;:::i;:::-;1848:90;;;936:1011;;;;;:::o;868:140:7:-;921:14;952:53;340:4:2;976:21:7;;999:4;959:45;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;959:45:7;;;;;;;;;;952:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2983:1463:6:-;3132:7;3141:10;3171:9;3184:1;3171:14;3167:103;;-1:-1:-1;3209:8:6;;-1:-1:-1;3219:39:6;3201:58;;3167:103;3283:9;3296:1;3283:14;3279:206;;3317:16;;:21;3313:111;;-1:-1:-1;3366:8:6;;-1:-1:-1;3376:32:6;3358:51;;3313:111;-1:-1:-1;3445:8:6;;-1:-1:-1;3455:18:6;3437:37;;3279:206;3498:9;:16;3518:1;3498:21;3494:109;;-1:-1:-1;3543:8:6;;-1:-1:-1;3553:38:6;3535:57;;3494:109;3612:15;3630:25;3645:9;3630:14;:25::i;:::-;3612:43;;3665:30;3698:41;3704:9;3715:1;3737;3718:9;:16;:20;;;;:::i;:::-;3698:5;:41::i;:::-;3665:74;;3749:16;3785:7;3779:3;:13;3775:347;;;3808:16;3858:54;3874:3;3879:7;3888:8;3898:13;3858:15;:54::i;:::-;3838:74;-1:-1:-1;3838:74:6;-1:-1:-1;3939:18:6;3930:5;:27;;;;;;;;:::i;:::-;;3926:90;;-1:-1:-1;3985:8:6;;-1:-1:-1;3995:5:6;-1:-1:-1;3977:24:6;;-1:-1:-1;;3977:24:6;3926:90;4037:53;4048:8;4058:9;4087:1;4068:9;:16;:20;;;;:::i;:::-;4058:31;;;;;;;;:::i;:::-;;;;;;;4037:10;:53::i;:::-;4092:18;4029:82;;;;;;;;;;3775:347;4131:17;4179:76;4195:13;4201:7;4195:3;:13;:::i;:::-;4210:19;4222:7;4210:9;:19;:::i;:::-;4231:8;4241:13;4179:15;:76::i;:::-;4158:97;-1:-1:-1;4158:97:6;-1:-1:-1;4278:18:6;4269:5;:27;;;;;;;;:::i;:::-;;4265:82;;-1:-1:-1;4320:8:6;;-1:-1:-1;4330:5:6;-1:-1:-1;4312:24:6;;-1:-1:-1;;4312:24:6;4265:82;4364:54;4375:9;4404:1;4385:9;:16;:20;;;;:::i;:::-;4375:31;;;;;;;;:::i;:::-;;;;;;;4408:9;4364:10;:54::i;:::-;4420:18;4356:83;;;;;;;;2983:1463;;;;;;;;:::o;2912:187:8:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:8;;;-1:-1:-1;;;;;;3020:17:8;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;315:362:4:-;372:19;556:72;584:9;569:11;564:1;:16;;563:30;556:72;;;605:16;620:1;605:16;;:::i;:::-;;;556:72;;;640:34;663:11;245:3:2;640:34:4;:::i;2318:492::-;2367:7;2680:1;2675;:6;;2667:15;;;;;;2689:14;2706:11;2715:1;2706:8;:11::i;:::-;2689:28;-1:-1:-1;2723:9:4;2741:10;2750:1;2689:28;2741:10;:::i;:::-;2735:1;:17;;2723:29;;2767:1;2762;:6;2758:36;;2786:1;2780:7;2806:1;2318:492;-1:-1:-1;;;2318:492:4:o;4913:544:6:-;5005:16;5046:4;5037:6;:13;5033:96;;;5066:52;;-1:-1:-1;;;5066:52:6;;10084:2:16;5066:52:6;;;10066:21:16;10123:2;10103:18;;;10096:30;10162:34;10142:18;;;10135:62;-1:-1:-1;;;10213:18:16;;;10206:40;10263:19;;5066:52:6;9882:406:16;5033:96:6;5151:5;:12;5142:6;:21;:44;;;;5174:5;:12;5167:4;:19;5142:44;5138:132;;;5202:57;;-1:-1:-1;;;5202:57:6;;10495:2:16;5202:57:6;;;10477:21:16;10534:2;10514:18;;;10507:30;10573:34;10553:18;;;10546:62;-1:-1:-1;;;10624:18:16;;;10617:45;10679:19;;5202:57:6;10293:411:16;5138:132:6;5279:20;5316:13;5323:6;5316:4;:13;:::i;:::-;-1:-1:-1;;;;;5302:28:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5302:28:6;-1:-1:-1;5279:51:6;-1:-1:-1;5357:6:6;5340:91;5369:4;5365:1;:8;5340:91;;;5412:5;5418:1;5412:8;;;;;;;;:::i;:::-;;;;;;;5394:3;5402:6;5398:1;:10;;;;:::i;:::-;5394:15;;;;;;;;:::i;:::-;;;;;;;;;;:26;5375:3;;5340:91;;;-1:-1:-1;5447:3:6;4913:544;-1:-1:-1;;;;4913:544:6:o;415:157:7:-;516:52;;-1:-1:-1;;;516:52:7;;;10892:39:16;10947:11;;;10940:27;;;10983:12;;;10976:28;;;478:14:7;;509:60;;11020:12:16;;516:52:7;;;-1:-1:-1;;516:52:7;;;;;;;;;;509:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2078:159:4:-;2121:7;;2160:56;2167:6;;2160:56;;2185:7;;;;:::i;:::-;;;;2208:1;2202:7;;;;;2160:56;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:257;218:4;212:11;;;250:17;;-1:-1:-1;;;;;282:34:16;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:4;373:24;146:257;:::o;408:251::-;480:2;474:9;522:2;510:15;;-1:-1:-1;;;;;540:34:16;;576:22;;;537:62;534:88;;;602:18;;:::i;664:253::-;736:2;730:9;778:4;766:17;;-1:-1:-1;;;;;798:34:16;;834:22;;;795:62;792:88;;;860:18;;:::i;922:275::-;993:2;987:9;1058:2;1039:13;;-1:-1:-1;;1035:27:16;1023:40;;-1:-1:-1;;;;;1078:34:16;;1114:22;;;1075:62;1072:88;;;1140:18;;:::i;:::-;1176:2;1169:22;922:275;;-1:-1:-1;922:275:16:o;1202:1716::-;1341:6;1349;1357;1401:9;1392:7;1388:23;1431:3;1427:2;1423:12;1420:32;;;1448:1;1445;1438:12;1420:32;1471:23;;;-1:-1:-1;1513:2:16;1549:4;-1:-1:-1;;1531:16:16;;1527:27;1524:47;;;1567:1;1564;1557:12;1524:47;1593:22;;:::i;:::-;1651:18;;;1638:32;1624:47;;1731:4;1716:20;;1703:34;1687:14;;;1680:58;1580:35;-1:-1:-1;1813:2:16;1798:18;;1785:32;;-1:-1:-1;;;;;;1866:14:16;;;1863:34;;;1893:1;1890;1883:12;1863:34;1916:22;;;;1972:2;1954:16;;;1950:25;1947:45;;;1988:1;1985;1978:12;1947:45;2016:22;;:::i;:::-;2076:2;2063:16;2104:2;2094:8;2091:16;2088:36;;;2120:1;2117;2110:12;2088:36;2143:17;;2191:4;2183:13;;2179:27;-1:-1:-1;2169:55:16;;2220:1;2217;2210:12;2169:55;2256:2;2243:16;2278:2;2274;2271:10;2268:36;;;2284:18;;:::i;:::-;2330:2;2327:1;2323:10;2313:20;;2353:28;2377:2;2373;2369:11;2353:28;:::i;:::-;2415:15;;;2485:11;;;2481:20;;;2446:12;;;;2513:19;;;2510:39;;;2545:1;2542;2535:12;2510:39;2569:11;;;;2589:142;2605:6;2600:3;2597:15;2589:142;;;2671:17;;2659:30;;2622:12;;;;2709;;;;2589:142;;;2756:5;2747:7;2740:22;;;;;2817:2;2813;2809:11;2796:25;2791:2;2782:7;2778:16;2771:51;2879:4;2875:2;2871:13;2858:27;2851:4;2842:7;2838:18;2831:55;2905:7;2895:17;;;;;;1202:1716;;;;;:::o;3115:171::-;3182:20;;-1:-1:-1;;;;;3231:30:16;;3221:41;;3211:69;;3276:1;3273;3266:12;3211:69;3115:171;;;:::o;3291:252::-;3358:6;3366;3419:2;3407:9;3398:7;3394:23;3390:32;3387:52;;;3435:1;3432;3425:12;3387:52;3471:9;3458:23;3448:33;;3500:37;3533:2;3522:9;3518:18;3500:37;:::i;:::-;3490:47;;3291:252;;;;;:::o;3964:1031::-;4076:6;4084;4092;4136:9;4127:7;4123:23;4166:3;4162:2;4158:12;4155:32;;;4183:1;4180;4173:12;4155:32;4207:4;4203:2;4199:13;4196:33;;;4225:1;4222;4215:12;4196:33;;4251:22;;:::i;:::-;4309:9;4296:23;4289:5;4282:38;4352:37;4385:2;4374:9;4370:18;4352:37;:::i;:::-;4347:2;4340:5;4336:14;4329:61;4450:2;4439:9;4435:18;4422:32;4417:2;4410:5;4406:14;4399:56;4515:2;4504:9;4500:18;4487:32;4482:2;4475:5;4471:14;4464:56;4539:5;4529:15;;;4595:4;4584:9;4580:20;4567:34;-1:-1:-1;;;;;4661:2:16;4653:6;4650:14;4647:34;;;4677:1;4674;4667:12;4647:34;4715:6;4704:9;4700:22;4690:32;;4760:7;4753:4;4749:2;4745:13;4741:27;4731:55;;4782:1;4779;4772:12;4731:55;4822:2;4809:16;4848:2;4840:6;4837:14;4834:34;;;4864:1;4861;4854:12;4834:34;4909:7;4904:2;4895:6;4891:2;4887:15;4883:24;4880:37;4877:57;;;4930:1;4927;4920:12;4877:57;4961:2;4957;4953:11;4943:21;;4983:6;4973:16;;;;;3964:1031;;;;;:::o;5208:180::-;5267:6;5320:2;5308:9;5299:7;5295:23;5291:32;5288:52;;;5336:1;5333;5326:12;5288:52;-1:-1:-1;5359:23:16;;5208:180;-1:-1:-1;5208:180:16:o;5780:150::-;-1:-1:-1;;;;;5874:31:16;;5864:42;;5854:70;;5920:1;5917;5910:12;5935:292;6020:6;6073:2;6061:9;6052:7;6048:23;6044:32;6041:52;;;6089:1;6086;6079:12;6041:52;6128:9;6115:23;6147:50;6191:5;6147:50;:::i;7281:322::-;7322:3;7360:5;7354:12;7384:1;7394:128;7408:6;7405:1;7402:13;7394:128;;;7505:4;7490:13;;;7486:24;;7480:31;7467:11;;;7460:52;7423:12;7394:128;;;-1:-1:-1;7577:1:16;7541:16;;7566:13;;;-1:-1:-1;7541:16:16;;7281:322;-1:-1:-1;7281:322:16:o;7608:189::-;7737:3;7762:29;7787:3;7779:6;7762:29;:::i;7802:184::-;7872:6;7925:2;7913:9;7904:7;7900:23;7896:32;7893:52;;;7941:1;7938;7931:12;7893:52;-1:-1:-1;7964:16:16;;7802:184;-1:-1:-1;7802:184:16:o;7991:535::-;8204:2;8193:9;8186:21;8243:6;8238:2;8227:9;8223:18;8216:34;8301:6;8293;8287:3;8276:9;8272:19;8259:49;8358:1;8352:3;8343:6;8332:9;8328:22;8324:32;8317:43;8167:4;8428:3;8421:2;8417:7;8412:2;8404:6;8400:15;8396:29;8385:9;8381:45;8377:55;8369:63;;8470:6;8463:4;8452:9;8448:20;8441:36;8513:6;8508:2;8497:9;8493:18;8486:34;7991:535;;;;;;;:::o;8807:127::-;8868:10;8863:3;8859:20;8856:1;8849:31;8899:4;8896:1;8889:15;8923:4;8920:1;8913:15;8939:135;8978:3;8999:17;;;8996:43;;9019:18;;:::i;:::-;-1:-1:-1;9066:1:16;9055:13;;8939:135::o;9079:127::-;9140:10;9135:3;9131:20;9128:1;9121:31;9171:4;9168:1;9161:15;9195:4;9192:1;9185:15;9211:128;9278:9;;;9299:11;;;9296:37;;;9313:18;;:::i;9344:125::-;9409:9;;;9430:10;;;9427:36;;;9443:18;;:::i;9474:271::-;-1:-1:-1;;;;;;9659:26:16;;9647:39;;9629:3;9702:37;9736:1;9727:11;;9719:6;9702:37;:::i;:::-;9695:44;9474:271;-1:-1:-1;;;;9474:271:16:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15"
  },
  "id": 13,
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "_verifier",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_trustedHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_trustedHeight",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "name": "InvalidTargetHeight",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "InvalidTrustedHeaderHash",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "proofNonce",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "startBlock",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "endBlock",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "dataCommitment",
              "type": "bytes32"
            }
          ],
          "name": "DataCommitmentStored",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint64",
              "name": "blockNumber",
              "type": "uint64"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "headerHash",
              "type": "bytes32"
            }
          ],
          "name": "HeadUpdate",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferStarted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "acceptOwnership",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_imageId",
              "type": "bytes32"
            }
          ],
          "name": "adminSetImageId",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_trustedHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_trustedHeight",
              "type": "uint64"
            }
          ],
          "name": "adminSetTrustedState",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "_verifier",
              "type": "address"
            }
          ],
          "name": "adminSetVerifier",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "imageId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestBlockHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "latestHeight",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "proofNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "trustedHeaderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "newHeight",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "newHeaderHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct RangeCommitment",
              "name": "_commit",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "_seal",
              "type": "bytes"
            }
          ],
          "name": "updateRange",
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "verifier",
          "outputs": [
            {
              "internalType": "contract IRiscZeroVerifier",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proofNonce",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "height",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "dataRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct DataRootTuple",
              "name": "_tuple",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32[]",
                  "name": "sideNodes",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "uint256",
                  "name": "key",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "numLeaves",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BinaryMerkleProof",
              "name": "_proof",
              "type": "tuple"
            }
          ],
          "name": "verifyAttestation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))": {
            "params": {
              "_proof": "Binary Merkle tree proof that `tuple` is in the root at `_tupleRootNonce`.",
              "_proofNonce": "Nonce of the tuple root to prove against.",
              "_tuple": "Data root tuple to prove inclusion of."
            },
            "returns": {
              "_0": "`true` is proof is valid, `false` otherwise."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adminSetImageId(bytes32)": {
            "notice": "Only the admin can update. Updates the image ID to verify proofs against."
          },
          "adminSetTrustedState(bytes32,uint64)": {
            "notice": "Only the admin can update. Updates the trusted height and block hash to sync from."
          },
          "adminSetVerifier(address)": {
            "notice": "Only the admin can update. Updates the verifier contract address."
          },
          "constructor": {
            "notice": "Initialize the contract, binding it to a specified RISC Zero verifier."
          },
          "imageId()": {
            "notice": "Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid."
          },
          "latestBlockHash()": {
            "notice": "The latest block hash validated."
          },
          "latestHeight()": {
            "notice": "The latest height validated."
          },
          "updateRange((bytes32,uint64,bytes32,bytes32),bytes)": {
            "notice": "Validate a proof of a new header range, update state."
          },
          "verifier()": {
            "notice": "RISC Zero verifier contract address."
          },
          "verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))": {
            "notice": "Verify a Data Availability attestation. Method of IDAOracle from Blobstream contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "compilationTarget": {
        "src/Blobstream0.sol": "Blobstream0"
      },
      "evmVersion": "paris",
      "libraries": {},
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "blobstream-contracts/=lib/blobstream-contracts/src/",
        "blobstream/=lib/blobstream-contracts/src/",
        "ds-test/=lib/blobstream-contracts/lib/ds-test/src/",
        "erc4626-tests/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/",
        "risc0-ethereum/=lib/risc0-ethereum/",
        "risc0/=lib/risc0-ethereum/contracts/src/",
        "tree/=lib/blobstream-contracts/src/lib/tree/",
        "verifier/=lib/blobstream-contracts/src/lib/verifier/"
      ]
    },
    "sources": {
      "lib/blobstream-contracts/src/DataRootTuple.sol": {
        "keccak256": "0x0526597d14a6d7f258ec48e434a9b60c9a8781764a8f23c878d49926daeb5d1c",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://06ee253f8d0f58dbe66c64cb5d2945182ba3bced088167472d8f953cec421916",
          "dweb:/ipfs/QmUF9jjr6bH3pPgjGAZqYhsUn7EevqU7kZn8RBqQ4EoU2w"
        ]
      },
      "lib/blobstream-contracts/src/IDAOracle.sol": {
        "keccak256": "0xc35648b17d3587bc3a627f67a328874db536ee24c11b970c3c57226d69a32eec",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://362610301e6057d10777c84111d4bb43af53af75a488fb8ab8666a775302a3fc",
          "dweb:/ipfs/QmURgSTYhiguV1oCUARaTTWrpFHg5nMEtxhPVcpUDuEKq6"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/Constants.sol": {
        "keccak256": "0x2050b2be8a739ce250cc5cea1556936c7937915b5d7fde269dd70e8e7eb660c4",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://946ea30d1001048a800f60bb24d2ab7ecf5f92ae2abd212f3f855e37a6840ce7",
          "dweb:/ipfs/QmW2PnhAB5h2eCCM6Vafg8ZUpBttjLTbBhtXjJh3SSrYEN"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/Types.sol": {
        "keccak256": "0xa47e9e20fef88264acdf1fc6bc0b3bb9f23c7022f5de8d203a1014895a606958",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://d480249b6adf8730bffcf26eed5902eb9fd1d56d11f931b35a9e19c6415b3f47",
          "dweb:/ipfs/QmPCrcMmQdNMYG232WxEg2zZRFvXQqdEZgwQNMaDJ2oNab"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/Utils.sol": {
        "keccak256": "0x9760cb3ab3d4f412949b9be1bbdf5d9e7954cad44a94a4f7fe90fcffb86fe7fa",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://06edf92a63d5b2c3459800acc6945071ee069be6df03b70f28440c5c732465aa",
          "dweb:/ipfs/QmU4LnS5ckxXpEBE82y5gfsNxn5gUQPh273nLrmfPP9pjD"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleProof.sol": {
        "keccak256": "0x9fb953284b455b544091f058fdb11ac73928093517333909c0744d9319410688",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://938230a60210345fe7cc661708c4fe0db663a5f5b5306f05fe4023b44f104b6e",
          "dweb:/ipfs/QmUvcJuDmwnbRzXX5qgV4Mckg6ujvMeo46SrTPvgpPhFSF"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleTree.sol": {
        "keccak256": "0x90dc9ac613014c2d3fcebbd23f2b5af67188b7de80b2ef853f20c91a14ce68fd",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://4dffcfb8911d174787b05d814c423ea368c6526e32d762576fb5109e517a185f",
          "dweb:/ipfs/QmRxYnjwkEANhqXkoNifG2kbGtEymyLRU5h2NyPTZ5wbSE"
        ]
      },
      "lib/blobstream-contracts/src/lib/tree/binary/TreeHasher.sol": {
        "keccak256": "0x2f16501eac14f6e2a61de29d3aa10e3aaf8e0a594fc9cf8dc2d955bb2f6d54e0",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://984a2e5d52cfdd38f2c597bddc4a2de8ad1e4dd9c81008376569a29c74fa963e",
          "dweb:/ipfs/QmaXhfHD58Jv4nSw3qw2hGwbDSPKDjFzPNYWm9Y4KWiigm"
        ]
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "license": "MIT",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ]
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12",
        "license": "MIT",
        "urls": [
          "bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7",
          "dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA"
        ]
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "license": "MIT",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ]
      },
      "lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol": {
        "keccak256": "0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0",
          "dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX"
        ]
      },
      "lib/risc0-ethereum/contracts/src/Util.sol": {
        "keccak256": "0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c",
          "dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"
        ]
      },
      "src/Blobstream0.sol": {
        "keccak256": "0x6ca264467067cc22fb5706254ecb924124302888e2ed4b4841d648e88c3fe390",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://d2622bfb128a010943c7db92865e89433ed6d9c37fc011c898827a0b82b902ac",
          "dweb:/ipfs/QmdVPVXvY3mcGt7guvjk2ZLWDg4QRsDkZ5272XefWsKmq9"
        ]
      },
      "src/ImageID.sol": {
        "keccak256": "0xb8112c6e9f26fda09d15a0f629109c7dd8daec4bb492644143d38a72826fe456",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://3ffed5c819d495df4ae1442d3c1465b37105d90e1aafe57dc78ff8f34c1a9df7",
          "dweb:/ipfs/QmfJG4mgDaShvnpMzetGFG2cZjSPbMKgYgzq6VCUToE9gk"
        ]
      },
      "src/RangeCommitment.sol": {
        "keccak256": "0x5e348841d50935293df2072b720b55b4efa76bb66afd34d64c7c77c1d8a209d8",
        "license": "Apache-2.0",
        "urls": [
          "bzz-raw://4ef3085d6c2cf5badf284827eaa3cdc469663fe32f6f3356a4381f14923b36df",
          "dweb:/ipfs/QmcPw35WFcVvDJPDhgd67R3mhtRe6GJUGTJ5dwBz5fVBHf"
        ]
      }
    },
    "version": 1
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "adminSetImageId(bytes32)": "a7e47629",
    "adminSetTrustedState(bytes32,uint64)": "23a4608b",
    "adminSetVerifier(address)": "e6679c26",
    "imageId()": "ef3f7dd5",
    "latestBlockHash()": "6c4f6ba9",
    "latestHeight()": "e405bbc3",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "proofNonce()": "ce0bb7e4",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "updateRange((bytes32,uint64,bytes32,bytes32),bytes)": "8a9fbdec",
    "verifier()": "2b7ac3f3",
    "verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))": "1f3302a9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_trustedHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_trustedHeight\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidTargetHeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTrustedHeaderHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proofNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"startBlock\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"endBlock\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataCommitment\",\"type\":\"bytes32\"}],\"name\":\"DataCommitmentStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"headerHash\",\"type\":\"bytes32\"}],\"name\":\"HeadUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageId\",\"type\":\"bytes32\"}],\"name\":\"adminSetImageId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_trustedHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_trustedHeight\",\"type\":\"uint64\"}],\"name\":\"adminSetTrustedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"adminSetVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestHeight\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"trustedHeaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"newHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"newHeaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct RangeCommitment\",\"name\":\"_commit\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_seal\",\"type\":\"bytes\"}],\"name\":\"updateRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proofNonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"dataRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct DataRootTuple\",\"name\":\"_tuple\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"sideNodes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numLeaves\",\"type\":\"uint256\"}],\"internalType\":\"struct BinaryMerkleProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"verifyAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"DataCommitmentStored(uint256,uint64,uint64,bytes32)\":{\"params\":{\"dataCommitment\":\"The data commitment for the block range.\",\"endBlock\":\"The end block of the block range.\",\"proofNonce\":\"The nonce of the proof.\",\"startBlock\":\"The start block of the block range.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))\":{\"params\":{\"_proof\":\"Binary Merkle tree proof that `tuple` is in the root at `_tupleRootNonce`.\",\"_proofNonce\":\"Nonce of the tuple root to prove against.\",\"_tuple\":\"Data root tuple to prove inclusion of.\"},\"returns\":{\"_0\":\"`true` is proof is valid, `false` otherwise.\"}}},\"stateVariables\":{\"latestBlockHash\":{\"details\":\"always update this in tandem with `latestHeight`\"},\"latestHeight\":{\"details\":\"this value is 64 bits as is the max for heights in Tendermint.\"}},\"title\":\"A starter application using RISC Zero.\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidTargetHeight()\":[{\"notice\":\"Target height for next batch was below the current height.\"}],\"InvalidTrustedHeaderHash()\":[{\"notice\":\"Trusted block hash does not equal the commitment from the new batch.\"}]},\"events\":{\"DataCommitmentStored(uint256,uint64,uint64,bytes32)\":{\"notice\":\"Data commitment stored for the block range [startBlock, endBlock) with proof nonce. NOTE: This event matches existing Blobstream contracts, for ease of integration.\"},\"HeadUpdate(uint64,bytes32)\":{\"notice\":\"Emits event with the new head update. NOTE: Matches existing Blobstream contract, for ease of integration.\"}},\"kind\":\"user\",\"methods\":{\"adminSetImageId(bytes32)\":{\"notice\":\"Only the admin can update. Updates the image ID to verify proofs against.\"},\"adminSetTrustedState(bytes32,uint64)\":{\"notice\":\"Only the admin can update. Updates the trusted height and block hash to sync from.\"},\"adminSetVerifier(address)\":{\"notice\":\"Only the admin can update. Updates the verifier contract address.\"},\"constructor\":{\"notice\":\"Initialize the contract, binding it to a specified RISC Zero verifier.\"},\"imageId()\":{\"notice\":\"Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid.\"},\"latestBlockHash()\":{\"notice\":\"The latest block hash validated.\"},\"latestHeight()\":{\"notice\":\"The latest height validated.\"},\"updateRange((bytes32,uint64,bytes32,bytes32),bytes)\":{\"notice\":\"Validate a proof of a new header range, update state.\"},\"verifier()\":{\"notice\":\"RISC Zero verifier contract address.\"},\"verifyAttestation(uint256,(uint256,bytes32),(bytes32[],uint256,uint256))\":{\"notice\":\"Verify a Data Availability attestation. Method of IDAOracle from Blobstream contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Blobstream0.sol\":\"Blobstream0\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blobstream-contracts/=lib/blobstream-contracts/src/\",\":blobstream/=lib/blobstream-contracts/src/\",\":ds-test/=lib/blobstream-contracts/lib/ds-test/src/\",\":erc4626-tests/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/blobstream-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\",\":tree/=lib/blobstream-contracts/src/lib/tree/\",\":verifier/=lib/blobstream-contracts/src/lib/verifier/\"]},\"sources\":{\"lib/blobstream-contracts/src/DataRootTuple.sol\":{\"keccak256\":\"0x0526597d14a6d7f258ec48e434a9b60c9a8781764a8f23c878d49926daeb5d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06ee253f8d0f58dbe66c64cb5d2945182ba3bced088167472d8f953cec421916\",\"dweb:/ipfs/QmUF9jjr6bH3pPgjGAZqYhsUn7EevqU7kZn8RBqQ4EoU2w\"]},\"lib/blobstream-contracts/src/IDAOracle.sol\":{\"keccak256\":\"0xc35648b17d3587bc3a627f67a328874db536ee24c11b970c3c57226d69a32eec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://362610301e6057d10777c84111d4bb43af53af75a488fb8ab8666a775302a3fc\",\"dweb:/ipfs/QmURgSTYhiguV1oCUARaTTWrpFHg5nMEtxhPVcpUDuEKq6\"]},\"lib/blobstream-contracts/src/lib/tree/Constants.sol\":{\"keccak256\":\"0x2050b2be8a739ce250cc5cea1556936c7937915b5d7fde269dd70e8e7eb660c4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://946ea30d1001048a800f60bb24d2ab7ecf5f92ae2abd212f3f855e37a6840ce7\",\"dweb:/ipfs/QmW2PnhAB5h2eCCM6Vafg8ZUpBttjLTbBhtXjJh3SSrYEN\"]},\"lib/blobstream-contracts/src/lib/tree/Types.sol\":{\"keccak256\":\"0xa47e9e20fef88264acdf1fc6bc0b3bb9f23c7022f5de8d203a1014895a606958\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d480249b6adf8730bffcf26eed5902eb9fd1d56d11f931b35a9e19c6415b3f47\",\"dweb:/ipfs/QmPCrcMmQdNMYG232WxEg2zZRFvXQqdEZgwQNMaDJ2oNab\"]},\"lib/blobstream-contracts/src/lib/tree/Utils.sol\":{\"keccak256\":\"0x9760cb3ab3d4f412949b9be1bbdf5d9e7954cad44a94a4f7fe90fcffb86fe7fa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06edf92a63d5b2c3459800acc6945071ee069be6df03b70f28440c5c732465aa\",\"dweb:/ipfs/QmU4LnS5ckxXpEBE82y5gfsNxn5gUQPh273nLrmfPP9pjD\"]},\"lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleProof.sol\":{\"keccak256\":\"0x9fb953284b455b544091f058fdb11ac73928093517333909c0744d9319410688\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://938230a60210345fe7cc661708c4fe0db663a5f5b5306f05fe4023b44f104b6e\",\"dweb:/ipfs/QmUvcJuDmwnbRzXX5qgV4Mckg6ujvMeo46SrTPvgpPhFSF\"]},\"lib/blobstream-contracts/src/lib/tree/binary/BinaryMerkleTree.sol\":{\"keccak256\":\"0x90dc9ac613014c2d3fcebbd23f2b5af67188b7de80b2ef853f20c91a14ce68fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dffcfb8911d174787b05d814c423ea368c6526e32d762576fb5109e517a185f\",\"dweb:/ipfs/QmRxYnjwkEANhqXkoNifG2kbGtEymyLRU5h2NyPTZ5wbSE\"]},\"lib/blobstream-contracts/src/lib/tree/binary/TreeHasher.sol\":{\"keccak256\":\"0x2f16501eac14f6e2a61de29d3aa10e3aaf8e0a594fc9cf8dc2d955bb2f6d54e0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://984a2e5d52cfdd38f2c597bddc4a2de8ad1e4dd9c81008376569a29c74fa963e\",\"dweb:/ipfs/QmaXhfHD58Jv4nSw3qw2hGwbDSPKDjFzPNYWm9Y4KWiigm\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7\",\"dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0\",\"dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"src/Blobstream0.sol\":{\"keccak256\":\"0x6ca264467067cc22fb5706254ecb924124302888e2ed4b4841d648e88c3fe390\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d2622bfb128a010943c7db92865e89433ed6d9c37fc011c898827a0b82b902ac\",\"dweb:/ipfs/QmdVPVXvY3mcGt7guvjk2ZLWDg4QRsDkZ5272XefWsKmq9\"]},\"src/ImageID.sol\":{\"keccak256\":\"0xb8112c6e9f26fda09d15a0f629109c7dd8daec4bb492644143d38a72826fe456\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3ffed5c819d495df4ae1442d3c1465b37105d90e1aafe57dc78ff8f34c1a9df7\",\"dweb:/ipfs/QmfJG4mgDaShvnpMzetGFG2cZjSPbMKgYgzq6VCUToE9gk\"]},\"src/RangeCommitment.sol\":{\"keccak256\":\"0x5e348841d50935293df2072b720b55b4efa76bb66afd34d64c7c77c1d8a209d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4ef3085d6c2cf5badf284827eaa3cdc469663fe32f6f3356a4381f14923b36df\",\"dweb:/ipfs/QmcPw35WFcVvDJPDhgd67R3mhtRe6GJUGTJ5dwBz5fVBHf\"]}},\"version\":1}"
}