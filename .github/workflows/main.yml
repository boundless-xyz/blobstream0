permissions:
  contents: read
  # This configuration allows maintainers of this repo to create a branch and pull request based on
  # the new branch. Restricting the push trigger to the main branch ensures that the PR only gets
  # built once.
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RISC0_TOOLCHAIN_VERSION: v2024-04-22.0
  RISC0_MONOREPO_REF: "main"
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Full history is required by license-check.py
          fetch-depth: 0
          submodules: recursive
      - uses: risc0/risc0/.github/actions/rustup@main
      - name: Install cargo-sort
        uses: risc0/cargo-install@b9307573043522ab0d3e3be64a51763b765b52a4
        with:
          crate: cargo-sort
          version: "1.0"
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: risc0/foundry-toolchain@2fe7e70b520f62368a0e3c464f997df07ede420f
      - run: cargo fmt --all --check
      - run: cargo sort --workspace --check
      - run: cargo clippy -p risc0-tm-core
      - run: forge fmt --check
        working-directory: contracts
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: python license-check.py
      - name: check for "D0 NOT MERGE" comments
        run: |
          [ "$(grep -re 'DO[_ ]\?NOT[_ ]\?MERGE' $(git ls-tree --full-tree --name-only -r HEAD) | tee /dev/fd/2 | wc -l)" -eq "0" ]
  test:
    runs-on: [self-hosted, prod, "${{ matrix.os }}", "${{ matrix.device }}"]
    strategy:
      fail-fast: false
      matrix:
        os: [Linux, macOS]
        feature: [default]
        device: [cpu]
        include:
          - os: Linux
            feature: cuda
            device: nvidia_rtx_a5000
          - os: macOS
            feature: metal
            device: apple_m2_pro
    env:
      FEATURE: ${{ matrix.feature }}
      RUST_BACKTRACE: full
    steps:
      # This is a workaround from: https://github.com/actions/checkout/issues/590#issuecomment-970586842
      - run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - if: matrix.feature == 'cuda'
        uses: risc0/risc0/.github/actions/cuda@main
      - uses: risc0/risc0/.github/actions/rustup@main
      # - uses: risc0/risc0/.github/actions/sccache@main
        # with:
          # key: ${{ matrix.os }}-${{ matrix.feature }}
      - uses: ./.github/actions/cargo-risczero-install
        with:
          ref: ${{ env.RISC0_MONOREPO_REF }}
          toolchain-version: ${{ env.RISC0_TOOLCHAIN_VERSION }}
          features: ${{ matrix.feature }}
      - uses: risc0/foundry-toolchain@2fe7e70b520f62368a0e3c464f997df07ede420f
      # TODO this likely shouldn't be needed https://github.com/risc0/blobstream0/issues/3
      - name: build forge contracts
        run: forge build
        working-directory: contracts
      - name: build workspace
        run: cargo test --workspace --timings --no-run
      - name: test workspace
        run: cargo test --workspace --timings
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: cargo-timings-${{ matrix.os }}-${{ matrix.device }}
      #     path: target/cargo-timings/
      #     retention-days: 5
      - run: forge test -vvv
        working-directory: contracts
      # - run: sccache --show-stats
